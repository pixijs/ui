(self.webpackChunk_pixi_ui=self.webpackChunk_pixi_ui||[]).push([[3223],{"./node_modules/@pixi/storybook-renderer/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{M:()=>PixiStory});var global__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/global/window.js"),global__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(global__WEBPACK_IMPORTED_MODULE_0__),pixi_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/pixi.js/lib/index.mjs"),{window:globalWindow}=global__WEBPACK_IMPORTED_MODULE_0___default();globalWindow.STORYBOOK_ENV="PIXI";var PixiStory=class{constructor(options){this.view=new pixi_js__WEBPACK_IMPORTED_MODULE_1__.mcf,options.context.parameters.pixi.appReady.then(()=>{options.init(this.view)}),void 0!==options.update&&(this.update=ticker=>{options.update(this.view,ticker)}),void 0!==options.resize&&(this.resize=(width,height)=>{options.resize(this.view,width,height)}),void 0!==options.destroy&&(this.destroy=()=>{options.destroy(this.view)})}}},"./node_modules/global/window.js":(module,__unused_webpack_exports,__webpack_require__)=>{var win;win="undefined"!=typeof window?window:void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:{},module.exports=win},"./src/stories/select/SelectSprite.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UseSprite:()=>UseSprite,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _pixi_storybook_renderer__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@pixi/storybook-renderer/dist/index.mjs"),_Select__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Select.ts"),_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/helpers/resize.ts"),_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers/styles.ts"),_utils_argTypes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/stories/utils/argTypes.ts"),_utils_loader__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/utils/loader.ts"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const args={dropDownHoverColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.hoverColor,fontColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.textColor,itemsAmount:100,onSelect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_6__.XI)("Item selected")},UseSprite={render:(args,ctx)=>{const{fontColor,itemsAmount,dropDownHoverColor,onSelect}=args;return new _pixi_storybook_renderer__WEBPACK_IMPORTED_MODULE_0__.M({context:ctx,init:view=>{const assets=["select.png","select_open.png"];let select;(0,_utils_loader__WEBPACK_IMPORTED_MODULE_5__.u)(assets).then(()=>{const textStyle={..._utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.a,fill:fontColor},items=function getItems(itemsAmount,text){const items=[];for(let i=0;i<itemsAmount;i++)items.push(`${text} ${i+1}`);return items}(itemsAmount,"Item");select=new _Select__WEBPACK_IMPORTED_MODULE_1__.l({closedBG:"select.png",openBG:"select_open.png",textStyle,items:{items,backgroundColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.color,hoverColor:dropDownHoverColor,width:297,height:50,textStyle,radius:15},scrollBox:{width:300,height:300}}),select.y=10,select.onSelect.connect((_,text)=>{onSelect({id:select.value,text})}),view.addChild(select),(0,_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_2__.E)(view,.5,0)})},resize:view=>(0,_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_2__.E)(view,.5,0)})}};const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import { PixiStory } from '@pixi/storybook-renderer';\nimport { Select } from '../../Select';\nimport { centerElement } from '../../utils/helpers/resize';\nimport { colors, defaultTextStyle } from '../../utils/helpers/styles';\nimport { argTypes, getDefaultArgs } from '../utils/argTypes';\nimport { preload } from '../utils/loader';\nimport { action } from '@storybook/addon-actions';\nconst args = {\n  dropDownHoverColor: colors.hoverColor,\n  fontColor: colors.textColor,\n  itemsAmount: 100,\n  onSelect: action('Item selected')\n};\nexport const UseSprite = {\n  render: (args, ctx) => {\n    const {\n      fontColor,\n      itemsAmount,\n      dropDownHoverColor,\n      onSelect\n    } = args;\n    return new PixiStory({\n      context: ctx,\n      init: view => {\n        const assets = [`select.png`, `select_open.png`];\n        let select;\n        preload(assets).then(() => {\n          const textStyle = {\n            ...defaultTextStyle,\n            fill: fontColor\n          };\n          const items = getItems(itemsAmount, 'Item');\n\n          // Component usage !!!\n          // Important: in order scroll to work, you have to call update() method in your game loop.\n          select = new Select({\n            closedBG: `select.png`,\n            openBG: `select_open.png`,\n            textStyle,\n            items: {\n              items,\n              backgroundColor: colors.color,\n              hoverColor: dropDownHoverColor,\n              width: 297,\n              height: 50,\n              textStyle,\n              radius: 15\n            },\n            scrollBox: {\n              width: 300,\n              height: 300\n            }\n          });\n          select.y = 10;\n          select.onSelect.connect((_, text) => {\n            onSelect({\n              id: select.value,\n              text\n            });\n          });\n          view.addChild(select);\n          centerElement(view, 0.5, 0);\n        });\n      },\n      resize: view => centerElement(view, 0.5, 0)\n    });\n  }\n};\nfunction getItems(itemsAmount, text) {\n  const items = [];\n  for (let i = 0; i < itemsAmount; i++) {\n    items.push(`${text} ${i + 1}`);\n  }\n  return items;\n}\nexport default {\n  title: 'Components/Select/Use Sprite',\n  argTypes: argTypes(args),\n  args: getDefaultArgs(args)\n};",locationsMap:{"use-sprite":{startLoc:{col:25,line:14},endLoc:{col:1,line:68},startBody:{col:25,line:14},endBody:{col:1,line:68}}}}},title:"Components/Select/Use Sprite",argTypes:(0,_utils_argTypes__WEBPACK_IMPORTED_MODULE_4__.U)(args),args:(0,_utils_argTypes__WEBPACK_IMPORTED_MODULE_4__.p)(args)},__namedExportsOrder=["UseSprite"]}}]);