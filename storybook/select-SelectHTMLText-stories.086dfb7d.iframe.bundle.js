"use strict";(self.webpackChunk_pixi_ui=self.webpackChunk_pixi_ui||[]).push([[1210],{"./src/stories/select/SelectHTMLText.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UseHTMLText:()=>UseHTMLText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var pixi_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/pixi.js/lib/index.mjs"),_Select__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Select.ts"),_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/helpers/resize.ts"),_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers/styles.ts"),_utils_argTypes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/stories/utils/argTypes.ts"),_utils_color__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/utils/color.ts"),_utils_loader__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/stories/utils/loader.ts"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const args={backgroundColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.color,dropDownBackgroundColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.color,dropDownHoverColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.hoverColor,fontColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.T.textColor,fontSize:28,width:250,height:50,radius:15,itemsAmount:5,onSelect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__.XI)("Item selected")},UseHTMLText={render:args=>{const{fontColor,fontSize,width,height,radius,itemsAmount,backgroundColor,dropDownBackgroundColor,dropDownHoverColor,onSelect}=args,view=new pixi_js__WEBPACK_IMPORTED_MODULE_0__.mcf,bgColor=(0,_utils_color__WEBPACK_IMPORTED_MODULE_5__.o)(backgroundColor)??0,fColor=(0,_utils_color__WEBPACK_IMPORTED_MODULE_5__.o)(fontColor)??16777215,ddBgColor=(0,_utils_color__WEBPACK_IMPORTED_MODULE_5__.o)(dropDownBackgroundColor)??0,hoverColor=(0,_utils_color__WEBPACK_IMPORTED_MODULE_5__.o)(dropDownHoverColor)??3355443,textStyle={..._utils_helpers_styles__WEBPACK_IMPORTED_MODULE_3__.a,fill:fColor,fontSize},items=function getItems(itemsAmount,text){const items=[];for(let i=0;i<itemsAmount;i++)items.push(`${text} ${i+1}`);return items}(itemsAmount,"Item"),select=new _Select__WEBPACK_IMPORTED_MODULE_1__.l({closedBG:getClosedBG(bgColor,width,height,radius),openBG:getOpenBG(ddBgColor,width,height,radius),textStyle,TextClass:pixi_js__WEBPACK_IMPORTED_MODULE_0__.xni,items:{items,backgroundColor:bgColor,hoverColor,width,height,textStyle,TextClass:pixi_js__WEBPACK_IMPORTED_MODULE_0__.xni,radius},scrollBox:{width,height:5*height,radius}});return select.y=10,select.onSelect.connect((_,text)=>{onSelect({id:select.value,text})}),view.addChild(select),{view,resize:()=>(0,_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_2__.E)(view,.5,0)}}};function getClosedBG(backgroundColor,width,height,radius){const closedBG=(new pixi_js__WEBPACK_IMPORTED_MODULE_0__.A1g).roundRect(0,0,width,height,radius).fill(backgroundColor);return(0,_utils_loader__WEBPACK_IMPORTED_MODULE_6__.u)(["arrow_down.png"]).then(()=>{const arrowDown=pixi_js__WEBPACK_IMPORTED_MODULE_0__.kxk.from("arrow_down.png");arrowDown.anchor.set(.5),arrowDown.x=.9*width,arrowDown.y=height/2,closedBG.addChild(arrowDown)}),closedBG}function getOpenBG(backgroundColor,width,height,radius){const openBG=(new pixi_js__WEBPACK_IMPORTED_MODULE_0__.A1g).roundRect(0,0,width,6*height,radius).fill(backgroundColor);return(0,_utils_loader__WEBPACK_IMPORTED_MODULE_6__.u)(["arrow_down.png"]).then(()=>{const arrowUp=pixi_js__WEBPACK_IMPORTED_MODULE_0__.kxk.from("arrow_down.png");arrowUp.angle=180,arrowUp.anchor.set(.5),arrowUp.x=.9*width,arrowUp.y=height/2,openBG.addChild(arrowUp)}),openBG}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import { Container, Graphics, HTMLText, Sprite } from 'pixi.js';\nimport { Select } from '../../Select';\nimport { centerElement } from '../../utils/helpers/resize';\nimport { colors, defaultTextStyle } from '../../utils/helpers/styles';\nimport { argTypes, getDefaultArgs } from '../utils/argTypes';\nimport { getColor } from '../utils/color';\nimport { preload } from '../utils/loader';\nimport { action } from '@storybook/addon-actions';\nconst args = {\n  backgroundColor: colors.color,\n  dropDownBackgroundColor: colors.color,\n  dropDownHoverColor: colors.hoverColor,\n  fontColor: colors.textColor,\n  fontSize: 28,\n  width: 250,\n  height: 50,\n  radius: 15,\n  itemsAmount: 5,\n  onSelect: action('Item selected')\n};\nexport const UseHTMLText = {\n  render: args => {\n    const {\n      fontColor,\n      fontSize,\n      width,\n      height,\n      radius,\n      itemsAmount,\n      backgroundColor,\n      dropDownBackgroundColor,\n      dropDownHoverColor,\n      onSelect\n    } = args;\n    const view = new Container();\n    const bgColor = getColor(backgroundColor) ?? 0x000000;\n    const fColor = getColor(fontColor) ?? 0xffffff;\n    const ddBgColor = getColor(dropDownBackgroundColor) ?? 0x000000;\n    const hoverColor = getColor(dropDownHoverColor) ?? 0x333333;\n    const textStyle = {\n      ...defaultTextStyle,\n      fill: fColor,\n      fontSize\n    };\n    const items = getItems(itemsAmount, 'Item');\n\n    // Component usage !!!\n    // Important: in order scroll to work, you have to call update() method in your game loop.\n    const select = new Select({\n      closedBG: getClosedBG(bgColor, width, height, radius),\n      openBG: getOpenBG(ddBgColor, width, height, radius),\n      textStyle,\n      TextClass: HTMLText,\n      items: {\n        items,\n        backgroundColor: bgColor,\n        hoverColor,\n        width,\n        height,\n        textStyle,\n        TextClass: HTMLText,\n        radius\n      },\n      scrollBox: {\n        width,\n        height: height * 5,\n        radius\n      }\n    });\n    select.y = 10;\n    select.onSelect.connect((_, text) => {\n      onSelect({\n        id: select.value,\n        text\n      });\n    });\n    view.addChild(select);\n    return {\n      view,\n      resize: () => centerElement(view, 0.5, 0)\n    };\n  }\n};\nfunction getClosedBG(backgroundColor, width, height, radius) {\n  const closedBG = new Graphics().roundRect(0, 0, width, height, radius).fill(backgroundColor);\n  preload(['arrow_down.png']).then(() => {\n    const arrowDown = Sprite.from('arrow_down.png');\n    arrowDown.anchor.set(0.5);\n    arrowDown.x = width * 0.9;\n    arrowDown.y = height / 2;\n    closedBG.addChild(arrowDown);\n  });\n  return closedBG;\n}\nfunction getOpenBG(backgroundColor, width, height, radius) {\n  const openBG = new Graphics().roundRect(0, 0, width, height * 6, radius).fill(backgroundColor);\n  preload(['arrow_down.png']).then(() => {\n    const arrowUp = Sprite.from('arrow_down.png');\n    arrowUp.angle = 180;\n    arrowUp.anchor.set(0.5);\n    arrowUp.x = width * 0.9;\n    arrowUp.y = height / 2;\n    openBG.addChild(arrowUp);\n  });\n  return openBG;\n}\nfunction getItems(itemsAmount, text) {\n  const items = [];\n  for (let i = 0; i < itemsAmount; i++) {\n    items.push(`${text} ${i + 1}`);\n  }\n  return items;\n}\nexport default {\n  title: 'Components/Select/Use HTML Text',\n  argTypes: argTypes(args),\n  args: getDefaultArgs(args)\n};",locationsMap:{"use-html-text":{startLoc:{col:27,line:21},endLoc:{col:1,line:83},startBody:{col:27,line:21},endBody:{col:1,line:83}}}}},title:"Components/Select/Use HTML Text",argTypes:(0,_utils_argTypes__WEBPACK_IMPORTED_MODULE_4__.U)(args),args:(0,_utils_argTypes__WEBPACK_IMPORTED_MODULE_4__.p)(args)},__namedExportsOrder=["UseHTMLText"]},"./src/stories/utils/color.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>getColor});var pixi_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/pixi.js/lib/index.mjs");function getColor(color){if("transparent"!==color&&void 0!==color)return pixi_js__WEBPACK_IMPORTED_MODULE_0__.Q1f.shared.setValue(color).toNumber()}}}]);