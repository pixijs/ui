"use strict";(self.webpackChunk_pixi_ui=self.webpackChunk_pixi_ui||[]).push([[3221],{"./src/stories/input/InputGraphics.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UseGraphics:()=>UseGraphics,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var pixi_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/pixi.js/lib/index.mjs"),_pixi_storybook_renderer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@pixi/storybook-renderer/dist/index.mjs"),_Input__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Input.ts"),_List__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/List.ts"),_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/helpers/resize.ts"),_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/utils/helpers/styles.ts"),_utils_argTypes__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/stories/utils/argTypes.ts"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const args={text:"",placeholder:"Enter text",secure:!1,align:[null,"left","center","right"],textColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_5__.T.textColor,backgroundColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_5__.T.color,borderColor:_utils_helpers_styles__WEBPACK_IMPORTED_MODULE_5__.T.pressedColor,maxLength:20,fontSize:24,border:5,width:320,height:70,radius:11,amount:1,paddingTop:0,paddingRight:7,paddingBottom:0,paddingLeft:7,cleanOnFocus:!0,addMask:!1,onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__.XI)("Change")},UseGraphics={render:(args,ctx)=>new _pixi_storybook_renderer__WEBPACK_IMPORTED_MODULE_1__.M({context:ctx,init:view=>{const{text,amount,border,textColor,fontSize,backgroundColor,borderColor,width,height,radius,maxLength,align,placeholder,secure,paddingTop,paddingRight,paddingBottom,paddingLeft,onChange,cleanOnFocus,addMask}=args,list=new _List__WEBPACK_IMPORTED_MODULE_3__.B({type:"vertical",elementsMargin:10});for(let i=0;i<amount;i++){const input=new _Input__WEBPACK_IMPORTED_MODULE_2__.p({bg:(new pixi_js__WEBPACK_IMPORTED_MODULE_0__.A1g).roundRect(0,0,width,height,radius+border).fill(borderColor).roundRect(border,border,width-2*border,height-2*border,radius).fill(backgroundColor),textStyle:{fill:textColor,fontSize,fontWeight:"bold"},maxLength,align,placeholder,secure,value:text,padding:[paddingTop,paddingRight,paddingBottom,paddingLeft],cleanOnFocus,addMask});input.onEnter.connect(val=>{onChange(`Input ${i+1} (${val})`)}),list.addChild(input),view.addChild(list)}},resize:view=>(0,_utils_helpers_resize__WEBPACK_IMPORTED_MODULE_4__.E)(view.children[0])})},__WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import { Graphics } from 'pixi.js';\nimport { PixiStory } from '@pixi/storybook-renderer';\nimport { Input } from '../../Input';\nimport { List } from '../../List';\nimport { centerElement } from '../../utils/helpers/resize';\nimport { colors } from '../../utils/helpers/styles';\nimport { argTypes, getDefaultArgs } from '../utils/argTypes';\nimport { action } from '@storybook/addon-actions';\nconst args = {\n  text: '',\n  placeholder: 'Enter text',\n  secure: false,\n  align: [null, 'left', 'center', 'right'],\n  textColor: colors.textColor,\n  backgroundColor: colors.color,\n  borderColor: colors.pressedColor,\n  maxLength: 20,\n  fontSize: 24,\n  border: 5,\n  width: 320,\n  height: 70,\n  radius: 11,\n  amount: 1,\n  paddingTop: 0,\n  paddingRight: 7,\n  paddingBottom: 0,\n  paddingLeft: 7,\n  cleanOnFocus: true,\n  addMask: false,\n  onChange: action('Change')\n};\nexport const UseGraphics = {\n  render: (args, ctx) => new PixiStory({\n    context: ctx,\n    init: view => {\n      const {\n        text,\n        amount,\n        border,\n        textColor,\n        fontSize,\n        backgroundColor,\n        borderColor,\n        width,\n        height,\n        radius,\n        maxLength,\n        align,\n        placeholder,\n        secure,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        paddingLeft,\n        onChange,\n        cleanOnFocus,\n        addMask\n      } = args;\n      const list = new List({\n        type: 'vertical',\n        elementsMargin: 10\n      });\n      for (let i = 0; i < amount; i++) {\n        // Component usage\n        const input = new Input({\n          bg: new Graphics().roundRect(0, 0, width, height, radius + border).fill(borderColor).roundRect(border, border, width - border * 2, height - border * 2, radius).fill(backgroundColor),\n          textStyle: {\n            fill: textColor,\n            fontSize,\n            fontWeight: 'bold'\n          },\n          maxLength,\n          align,\n          placeholder,\n          secure,\n          value: text,\n          padding: [paddingTop, paddingRight, paddingBottom, paddingLeft],\n          cleanOnFocus,\n          addMask\n        });\n        input.onEnter.connect(val => {\n          onChange(`Input ${i + 1} (${val})`);\n        });\n        list.addChild(input);\n        view.addChild(list);\n      }\n    },\n    resize: view => centerElement(view.children[0])\n  })\n};\nexport default {\n  title: 'Components/Input/Use Graphics',\n  argTypes: argTypes(args),\n  args: {\n    ...getDefaultArgs(args),\n    align: 'center'\n  }\n};",locationsMap:{"use-graphics":{startLoc:{col:27,line:32},endLoc:{col:1,line:90},startBody:{col:27,line:32},endBody:{col:1,line:90}}}}},title:"Components/Input/Use Graphics",argTypes:(0,_utils_argTypes__WEBPACK_IMPORTED_MODULE_6__.U)(args),args:{...(0,_utils_argTypes__WEBPACK_IMPORTED_MODULE_6__.p)(args),align:"center"}},__namedExportsOrder=["UseGraphics"]}}]);